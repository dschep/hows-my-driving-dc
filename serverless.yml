service: hows-my-driving-dc
tenant: personal
app: hows-my-driving-dc

provider:
  name: aws
  runtime: nodejs10.x
  memorySize: 1536
  timeout: 180
  environment:
    BUCKET: ${self:custom.bucket}

  iamRoleStatements:
    - Effect: Allow
      Action: ssm:GetParameters
      Resource: arn:aws:ssm:us-east-1:704903784842:parameter/howsmydriving/*
    - Effect: Allow
      Action: kms:Decrypt
      Resource: arn:aws:kms:us-east-1:704903784842:key/11b9fec1-3ab3-42d4-87f7-25b78c45ea10
    - Effect: Allow
      Action:
        - s3:PutObject
      Resource: "arn:aws:s3:::${self:custom.bucket}/*"
    - Effect: Allow
      Action:
        - sdb:ListDomains
      Resource: arn:aws:sdb:us-east-1:704903784842:domain/*
    - Effect: Allow
      Action:
        - sdb:GetAttributes
        - sdb:PutAttributes
        - sdb:CreateDomain
      Resource: arn:aws:sdb:us-east-1:704903784842:domain/howsmydrivingdc

functions:
  test:
    handler: src/handlers.test
    environment:
      DEBUG: 0
  register:
    handler: src/handlers.register
  subscribe:
    handler: src/handlers.subscribe
  crc:
    handler: src/handlers.crc
    events:
      - http:
          path: webhook.json
          method: get
  webhook:
    handler: src/handlers.webhook
    events:
      - http:
          path: webhook.json
          method: post
    layers:
      - ${cf:serverless-puppeteer-layers-${opt:stage, self:provider.stage}.ChromeLambdaLayerExport}
  archive:
    handler: src/handlers.archive

package:
  exclude:
    - '**/*'
  include:
    - 'src/**/*.js'
    - 'eng.traineddata'
    - 'node_modules/**'

plugins:
  - serverless-hooks-plugin

custom:
  bucket: hows-my-driving-dc-html
  hooks:
    package:initialize:
      - rm -rf node_modules/puppeteer/.local-chromium/

resources:
  Resources:
    AttachmentsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucket}
